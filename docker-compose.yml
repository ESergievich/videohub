services:
  postgres_db:
    image: postgres:15
    restart: unless-stopped
    container_name: postgres_db
    env_file: ".env"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build: .
    command: >
      sh -c "sleep 5 &&
             python manage.py migrate &&
             uv sync --frozen --no-install-project --no-dev &&
             python manage.py runserver 0.0.0.0:8000 --insecure"
    container_name: videohub
    env_file: ".env"
    volumes:
      - ./config:/app/config
      - ./manage.py:/app/manage.py
      - ./users:/app/users
      - ./videos:/app/videos
    ports:
      - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: always

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres_db
      ADMINER_DESIGN: nette

volumes:
  postgres_data: